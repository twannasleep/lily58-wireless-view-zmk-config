/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <250>;
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&mt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHABET {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                              &kp N6       &kp N7    &kp N8    &kp N9     &kp N0    &kp BSLH
&kp ESC    &kp Q   &kp W   &kp E     &kp R     &kp T                               &kp Y        &kp U     &kp I     &kp O      &kp P     &kp BSPC
&kp TAB    &kp A   &kp S   &kp D     &kp F     &kp G                               &kp H        &kp J     &kp K     &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B       &kp ESC      &kp DEL    &kp B        &kp N     &kp M     &kp COMMA  &kp DOT   &kp FSLH
                           &kp LALT  &kp LGUI  &lt 1 PLUS  &kp SPACE    &kp ENTER  &lt 2 MINUS  &kp LGUI  &kp RALT
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
